
package gui;

import entities.*;
import carlos.utils.*;

import client.ConexionBD;

import java.awt.Color;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.TimeZone;
import javax.swing.JOptionPane;

/**
 *
 * @author carlos
 */
public class VentanaAgenda extends javax.swing.JFrame {

    private ConexionBD con = null;
    private ResultSet res = null;
    private int total = 0;

    /** Creates new form VentanaAgenda */
    public VentanaAgenda() {
        try {
            inicializarTimeZone();
            initComponents();
            con = new ConexionBD();
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(this, "Excepción " + ex, "Error", JOptionPane.ERROR_MESSAGE);
        }

    }
    
    /** Para resolver el problema del timezone que se produce en Oracle
    */
    private void inicializarTimeZone() {
        TimeZone timeZone = TimeZone.getTimeZone("GMT+1");
        TimeZone.setDefault(timeZone);
    }


    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    private void initComponents() {//GEN-BEGIN:initComponents

        botConsultar = new javax.swing.JButton();
        botAnadir = new javax.swing.JButton();
        botLimpiar = new javax.swing.JButton();
        inTextProvincia = new javax.swing.JTextField();
        labProvincia = new javax.swing.JLabel();
        inTextCodPostal = new javax.swing.JTextField();
        labCodigoPostal = new javax.swing.JLabel();
        labTelefono = new javax.swing.JLabel();
        inTextDireccion = new javax.swing.JTextField();
        labDireccion = new javax.swing.JLabel();
        inTextTelefono = new javax.swing.JTextField();
        botSiguiente = new javax.swing.JButton();
        inTextNombre = new javax.swing.JTextField();
        labNombre = new javax.swing.JLabel();
        botUltimo = new javax.swing.JButton();
        botAnterior = new javax.swing.JButton();
        botPrimero = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        botConsultar.setText("Consultar");
        botConsultar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botConsultarActionPerformed(evt);
            }
        });

        botAnadir.setText("Añadir");
        botAnadir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botAnadirActionPerformed(evt);
            }
        });

        botLimpiar.setText("Limpiar");
        botLimpiar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botLimpiarActionPerformed(evt);
            }
        });

        labProvincia.setText("Provincia");

        labCodigoPostal.setText("CodigoPostal");

        labTelefono.setText("Telefono");

        labDireccion.setText("Direccion");

        botSiguiente.setText(">");
        botSiguiente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botSiguienteActionPerformed(evt);
            }
        });

        labNombre.setText("Nombre");

        botUltimo.setText(">>");
        botUltimo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botUltimoActionPerformed(evt);
            }
        });

        botAnterior.setText("<");
        botAnterior.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botAnteriorActionPerformed(evt);
            }
        });

        botPrimero.setText("<<");
        botPrimero.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botPrimeroActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(43, 43, 43)
                        .addComponent(labNombre)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(inTextNombre, javax.swing.GroupLayout.PREFERRED_SIZE, 221, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(labCodigoPostal)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap(56, Short.MAX_VALUE)
                        .addComponent(botLimpiar)
                        .addGap(18, 18, 18)
                        .addComponent(botAnadir)
                        .addGap(18, 18, 18)
                        .addComponent(botConsultar))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(62, 62, 62)
                        .addComponent(botPrimero)
                        .addGap(18, 18, 18)
                        .addComponent(botAnterior)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(botSiguiente)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(botUltimo)))
                .addGap(73, 73, 73))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(38, 38, 38)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(labProvincia)
                        .addComponent(labDireccion)
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(labTelefono)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(inTextTelefono)
                                .addComponent(inTextDireccion)
                                .addComponent(inTextProvincia)
                                .addComponent(inTextCodPostal, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 223, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addContainerGap(78, Short.MAX_VALUE)))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(inTextNombre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(labNombre))
                .addGap(61, 61, 61)
                .addComponent(labCodigoPostal)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 99, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(botLimpiar)
                    .addComponent(botAnadir)
                    .addComponent(botConsultar))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(botSiguiente)
                    .addComponent(botUltimo)
                    .addComponent(botAnterior)
                    .addComponent(botPrimero))
                .addGap(26, 26, 26))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(68, 68, 68)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(inTextTelefono, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(labTelefono))
                    .addGap(18, 18, 18)
                    .addComponent(inTextCodPostal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(labDireccion)
                        .addComponent(inTextDireccion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGap(18, 18, 18)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(labProvincia)
                        .addComponent(inTextProvincia, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addContainerGap(108, Short.MAX_VALUE)))
        );

        pack();
    }//GEN-END:initComponents

    private void botConsultarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botConsultarActionPerformed
        // TODO add your handling code here:
        boolean regValido = false;
        String nombre = null;
        
        try {
            res = con.consultar(obtenerAgenda());
            total = numeroFilas();
            if (!res.isAfterLast() && res.first())
                muestraDatos();
            else
                muestraVacio();
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(this, "Excepción SQL " + ex, "Error", JOptionPane.ERROR_MESSAGE);
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Excepción " + e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
        }
        
    }//GEN-LAST:event_botConsultarActionPerformed
    /** acción que se realiza cuando se pulsa el botón añadir. Se capturan los datos del formulario y se insertan
    * en la base de datos.
    * @param evt evento que indica la acción que se ha realizado
    */
    private void botAnadirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botAnadirActionPerformed
        // TODO add your handling code here:
        try {
            Contacto agenda = obtenerAgenda();
            if (agenda!=null)   {
                con.insertar(agenda, res);
                muestraVacio();
                JOptionPane.showMessageDialog(this, "El registro se ha añadido correctamente", "Añadir datos", JOptionPane.INFORMATION_MESSAGE);
            } else {
                JOptionPane.showMessageDialog(this, "Por favor, complete el formulario adecuadamente", "Advertencia",
                                              JOptionPane.WARNING_MESSAGE); 
            }
            
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(this, "Excepción SQL " + ex + "\nNo se ha añadido el registro", "Error",
                                          JOptionPane.ERROR_MESSAGE);
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(this, "Excepción " + ex + "\nNo se ha añadido el registro", "Error",
                                          JOptionPane.ERROR_MESSAGE);
        }
  
    }//GEN-LAST:event_botAnadirActionPerformed
    
    /** método que obtiene los valores de los campos del formulario
     */
    private Contacto obtenerAgenda() throws Exception {
        String nombre = inTextNombre.getText().trim();
        String direccion = inTextDireccion.getText().trim();
        String provincia = inTextProvincia.getText().trim();
        String telefono = inTextTelefono.getText().trim();
        String codigoPostal = inTextCodPostal.getText().trim();
        Contacto newContact=null;
        
        newContact = new Contacto();
        newContact.setNombre(nombre);
        if (codigoPostal.equals(""))
        newContact.setCodigoPostal(-1);
        else{
            newContact.setCodigoPostal(Integer.parseInt(codigoPostal));
        }
        newContact.setDireccion(direccion);
        newContact.setProvincia(provincia);
        newContact.setTelefono(telefono);
        
        
        return  newContact;
    };
    
    /** borra los campos del formulario
    */
    private void muestraVacio() {
        inTextNombre.setText("");
        inTextCodPostal.setText("");
        inTextDireccion.setText("");
        inTextProvincia.setText("");
        inTextTelefono.setText("");
        botPrimero.setEnabled(false);
        botAnterior.setEnabled(false);
        botUltimo.setEnabled(false);
        botSiguiente.setEnabled(false);
    }
    
    private void muestraDatos() throws SQLException {
        inTextNombre.setText(res.getString(1));
        inTextTelefono.setText(res.getString(2));
        inTextDireccion.setText(res.getString(3));
        inTextCodPostal.setText(res.getString(4));
        inTextProvincia.setText(res.getString(5));
        int num = res.getRow();
        if (num == total) {
            botUltimo.setEnabled(false);
            botSiguiente.setEnabled(false);
        } else {
            botUltimo.setEnabled(true);
            botSiguiente.setEnabled(true);
        }
        if (num == 1) {
            botPrimero.setEnabled(false);
            botAnterior.setEnabled(false);
        } else {
            botPrimero.setEnabled(true);
            botAnterior.setEnabled(true);
        }
    }
    
    /** devuelve el número de filas de una consulta
     */
    private int numeroFilas() throws SQLException {
        res.last();
        return res.getRow();
    }
    
    private void botLimpiarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botLimpiarActionPerformed
        // TODO add your handling code here:
        muestraVacio();
    }//GEN-LAST:event_botLimpiarActionPerformed
    /** acción que se realiza cuando se pulsa el botón siguiente. Se muestra el registro siguiente del resulset
    * @param evt evento que indica la acción que se ha realizado
    */
    private void botSiguienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botSiguienteActionPerformed
        // TODO add your handling code here:
        try {
            if (!res.isAfterLast() && res.next())
                muestraDatos();
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(this, "Excepción SQL " + ex, "Error", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_botSiguienteActionPerformed
    
    /** acción que se realiza cuando se pulsa el botón anterior. Se muestra el registro anterior del resulset
    * @param evt evento que indica la acción que se ha realizado
    */
    private void botAnteriorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botAnteriorActionPerformed
        // TODO add your handling code here:
        try {
            if (res.previous())
                muestraDatos();
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(this, "Excepción SQL " +ex, "Error", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_botAnteriorActionPerformed
    /** acción que se realiza cuando se pulsa el botón último. Se muestra el último registro de datos del resulset
    * @param evt evento que indica la acción que se ha realizado
    */
    private void botUltimoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botUltimoActionPerformed
        // TODO add your handling code here:
        try {
            if (res.last())
                muestraDatos();
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(this, "Excepción SQL " + ex, "Error", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_botUltimoActionPerformed
    
    /** Acción que se realiza cuando se pulsa el botón primero. Se muestra el primer registro de datos del resulset
    * @param evt evento que indica la acción que se ha realizado
    */
    private void botPrimeroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botPrimeroActionPerformed
        // TODO add your handling code here:
        try {
            if (res.first())
            muestraDatos();
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(this, "Excepción SQL " + ex, "Error", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_botPrimeroActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(VentanaAgenda.class.getName()).log(java.util.logging.Level.SEVERE, null,
                                                                                  ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(VentanaAgenda.class.getName()).log(java.util.logging.Level.SEVERE, null,
                                                                                  ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(VentanaAgenda.class.getName()).log(java.util.logging.Level.SEVERE, null,
                                                                                  ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(VentanaAgenda.class.getName()).log(java.util.logging.Level.SEVERE, null,
                                                                                  ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new VentanaAgenda().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton botAnadir;
    private javax.swing.JButton botAnterior;
    private javax.swing.JButton botConsultar;
    private javax.swing.JButton botLimpiar;
    private javax.swing.JButton botPrimero;
    private javax.swing.JButton botSiguiente;
    private javax.swing.JButton botUltimo;
    private javax.swing.JTextField inTextCodPostal;
    private javax.swing.JTextField inTextDireccion;
    private javax.swing.JTextField inTextNombre;
    private javax.swing.JTextField inTextProvincia;
    private javax.swing.JTextField inTextTelefono;
    private javax.swing.JLabel labCodigoPostal;
    private javax.swing.JLabel labDireccion;
    private javax.swing.JLabel labNombre;
    private javax.swing.JLabel labProvincia;
    private javax.swing.JLabel labTelefono;
    // End of variables declaration//GEN-END:variables
    
}
